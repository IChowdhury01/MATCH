package com;

import java.sql.*;
import com.MatchJDBC;
import static spark.Spark.*;

public class MatchApp {

    // Declare dependencies (i.e. classes, interfaces) [OPTIONAL]

    public static void main(String[] args) {

        // Instantiate dependencies (create objects) [OPTIONAL]

        /**
         * This directory will contain all static files that will be served
         * These are files that aren't generated by the server, but are preset and loaded
         * e.g. HTML forms, images, CSS style sheets, static javascript files
         * Home page, login, register pages can be static?
         * Profile/Friendslist, Friend profile pages can not?
         */
        String staticFilesDir = "src/main/resources/";
        String usrname;          // Basic account info. Username MUST BE unique, it will be our main identifier
//        String password;
//        String displayName;       // Display Name, this is the name users will see.
//        String aboutMe;
//        int maxTravelDistance;    // Maximum distance to search for friends
//        double longitude;         // Geolocation data
//        double latitude;
        Statement stmt;
//        boolean Dancing;

        // Configure Spark's embedded Jetty Web Server
        port(8080);     // To test routes: localhost:8080/<routeURL>
        staticFiles.location(staticFilesDir);   // Set static files directory
        
        staticFiles.externalLocation(staticFilesDir); //only for local testing


        // Set up before filters [OPTIONAL]


        // Set up routing
        get("/ping", (req, res)->"Pong\n");

        get("/user/:name", (req,res)-> {
            String username = req.queryParams("username");
            return false;
//            return getUser(username);
        });

        post("/login",(req,res)-> {
            String name = req.queryParams("username");
            String pass = req.queryParams("password");

            Boolean loginsuccess = MatchJDBC.userLogin(name, pass);

            if(loginsuccess)
                res.redirect("/user/:name");
            else
                res.redirect("/login.html");
            return loginsuccess;
        });

        post("/register",(req,res)-> {
            MatchJDBC.createUser (
                    req.queryParams("username"),
                    req.queryParams("password"),
                    req.queryParams("displayName"),
                    req.queryParams("aboutMe"),

                    Double.parseDouble(req.queryParams("maxTravelDistance")),   // queryParams only returns strings

                    // var latitude, longitude - get from register.html script, parse to Double.
                    Double.parseDouble(req.queryParams("latitude")),    // Not sure if this works
                    Double.parseDouble(req.queryParams("longitude")),

                    // survey questions - get from radio buttons, parse to Boolean
                    Boolean.parseBoolean(req.queryParams("Swimming")),   // not sure if this works
                    Boolean.parseBoolean(req.queryParams("Reading")),
                    Boolean.parseBoolean(req.queryParams("Biking")),
                    Boolean.parseBoolean(req.queryParams("Hiking")),
                    Boolean.parseBoolean(req.queryParams("Camping")),
                    Boolean.parseBoolean(req.queryParams("Dancing")),
                    Boolean.parseBoolean(req.queryParams("Running")),
                    Boolean.parseBoolean(req.queryParams("Video Games")),
                    Boolean.parseBoolean(req.queryParams("Bowling")),
                    Boolean.parseBoolean(req.queryParams("Basketball")),
                    Boolean.parseBoolean(req.queryParams("Football")),
                    Boolean.parseBoolean(req.queryParams("Baseball")),
                    Boolean.parseBoolean(req.queryParams("Programming")),
                    Boolean.parseBoolean(req.queryParams("Watching TV")),
                    Boolean.parseBoolean(req.queryParams("Going to the Movies"))
                    );
            res.redirect("/login.html");
            return "Registration Successful";
        });

            // May need a logout route - not sure yet.
            // Upload profile pic route - http://sparkjava.com/documentation#javadoc

        // Set up after filters [OPTIONAL]

        // Initialize and test database
        MatchJDBC.createSchema();
//        MatchJDBC.createUser(username, password, displayName, aboutMe, maxTravelDistance, latitude, longitude,  Swimming, Reading, Biking, Hiking, Camping,  Dancing, Running, Video_Games, Bowling, Basketball, Football, Baseball, Programming, Watching_TV, Going_to_the_Movies);
//        MatchJDBC.userLogin(username,password);
//        MatchJDBC.getUser(usrname);
    }
    
    public static double distance(double lat1, double lat2, double long1, double long2) {
        //https://stackoverflow.com/questions/3694380/calculating-distance-between-two-points-using-latitude-longitude

        final int R = 6371; // Radius of the earth

        double latDistance = Math.toRadians(lat2 - lat1);
        double lonDistance = Math.toRadians(long2 - long1);
        double a = Math.sin(latDistance / 2) * Math.sin(latDistance / 2)
                + Math.cos(Math.toRadians(lat1)) * Math.cos(Math.toRadians(lat2))
                * Math.sin(lonDistance / 2) * Math.sin(lonDistance / 2);
        double c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));
        return R * c * 0.621371; // convert to miles

    }

}
