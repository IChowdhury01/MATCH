package com;

import com.MatchJDBC;
import static spark.Spark.*;

public class MatchApp {

    // Declare dependencies (i.e. classes, interfaces) [OPTIONAL]

    public static void main(String[] args) {

        // Instantiate dependencies (create objects) [OPTIONAL]

        /**
         * This directory will contain all static files that will be served
         * These are files that aren't generated by the server, but are preset and loaded
         * e.g. HTML forms, images, CSS style sheets, static javascript files
         * Home page, login, register pages can be static?
         * Profile/Friendslist, Friend profile pages can not?
         */
        String staticFilesDir = "src/main/resources/";


        // Configure Spark's embedded Jetty Web Server
        port(8080);     // To test routes: localhost:8080/<routeURL>
        staticFiles.location(staticFilesDir);   // Set static files directory


        // Set up before filters [OPTIONAL]


        // Set up routing
        get("/ping", (req, res)->"Pong\n");

        get("/user/:name", (req,res)-> {
            String username = req.queryParams("username");
            return getUser(username);
        });

        post("/login",(req,res)-> {
            String name = req.queryParams("username");
            String pass = req.queryParams("password");

            Boolean loginsuccess = MatchJDBC.userLogin(name, pass);

            if(loginsuccess)
                res.redirect("/user/:name");
            else
                res.redirect("/login.html");
            return loginsuccess;
        });

        post("/register",(req,res)-> {
            MatchJDBC.createUser (
                    req.queryParams("username"),
                    req.queryParams("password"),
                    req.queryParams("displayName"),
                    req.queryParams("aboutMe"),

                    Double.parseDouble(req.queryParams("maxTravelDistance")),   // queryParams only returns strings

                    // var latitude, longitude - get from register.html script, parse to Double.
                    Double.parseDouble(req.queryParams("latitude")),    // Not sure if this works
                    Double.parseDouble(req.queryParams("longitude")),

                    // survey questions - get from radio buttons, parse to Boolean
                    Boolean.parseBoolean(req.queryParams("swimming")),   // not sure if this works
                    Boolean.parseBoolean(req.queryParams("reading")),
                    Boolean.parseBoolean(req.queryParams("bike")),
                    Boolean.parseBoolean(req.queryParams("hiking")),
                    Boolean.parseBoolean(req.queryParams("camp")),
                    Boolean.parseBoolean(req.queryParams("dance")),
                    Boolean.parseBoolean(req.queryParams("run")),
                    Boolean.parseBoolean(req.queryParams("games")),
                    Boolean.parseBoolean(req.queryParams("bowl")),
                    Boolean.parseBoolean(req.queryParams("basketball")),
                    Boolean.parseBoolean(req.queryParams("football")),
                    Boolean.parseBoolean(req.queryParams("baseball")),
                    Boolean.parseBoolean(req.queryParams("program")),
                    Boolean.parseBoolean(req.queryParams("TV")),
                    Boolean.parseBoolean(req.queryParams("movies"))
                    );
            res.redirect("/login.html");
            return "Registration Successful";
        });

            // May need a logout route - not sure yet.
            // Upload profile pic route - http://sparkjava.com/documentation#javadoc


        // Set up after filters [OPTIONAL]


        // Initialize and test database
        MatchJDBC.createDatabase();
//        MatchJDBC.createUser();
//        MatchJDBC.userLogin();
//        MatchJDBC.getUser();
    }
}